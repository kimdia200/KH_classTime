<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/security"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd">
	<!-- #4. 암호화인코딩 빈등록 : BCryptPaaswordEncoder -->
	<beans:bean id="bcryptPasswordEncoder" class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder" />

	<!-- #5. 권한체크 설정 -->
	<http security="none" pattern="/resources/**"/><!-- 정적파일은 검사를 제외시킨다 -->
	<http auto-config="true"> <!-- auto-config="true" : 자질구레한 설정 자동으로 해줌 -->
        <intercept-url pattern="/" access="permitAll"/>
        <intercept-url pattern="/index.jsp" access="permitAll"/><!-- forward로 가는거라 등록 -->
        <intercept-url pattern="/member/memberLogin.do" access="isAnonymous()"/> <!-- 인증 전에만 접근 가능 -->
        <intercept-url pattern="/member/memberLoginProcess.do" access="isAnonymous()"/> <!-- 인증 전에만 접근 가능 -->
        <intercept-url pattern="/admin/**" access="hasRole('ADMIN')"/><!-- admin관련 -->
        <intercept-url pattern="/**" access="hasRole('USER')"/>
        <!-- 
        login-page : 로그인 폼 페이지 요청
        login-processing-url : 로그인 폼 제출 페이지. 핸들러작성 필요없음
        
        username-parameter / password-parameter:
        제출폼에서  id/pw에 해당하는 name값이 username/password가 아닌경우
         -->
        <form-login
            login-page="/member/memberLogin.do"
            login-processing-url="/member/memberLoginProdess.do"
            username-parameter="id"
            password-parameter="password"/>
         	<!-- 로그아웃시 원하는 쿠키도 지울수있음 -->
         <logout
         	logout-url="/member/memberLogout.do"
         	logout-success-url="/"
         	delete-cookies=""
         />
         <!-- remember-me : session-timeout시간이상으로 사용자 정보를 관리 -->
         <!-- 
         	data-souce-ref = DB연결하는 빈
         	token-validity-seconds : remember-me 토큰 유효시간 60*60*24*14(초단위) 2주로함
          -->
         <remember-me
         	data-source-ref="dataSource"
         	token-validity-seconds="1209600"
         />
         <!-- 권한 없는 페이지 접근시 처리 -->
         <!-- 로그인 했는데도 권한이 부족할경우 에러페이지로 넘어감 -->
         <!-- ex) 회원이 ROLE_USER만있는데 ROLE_ADMIN이 필요한경우 -->
         <!-- error/accessDenied.do는 강사님이 HomeController에 만들어놈 -->
         <access-denied-handler error-page="/error/accessDenied.do"/>
    </http>
	
	<!-- #6. 인증/권한 검사 manager빈 설정 -->
	<authentication-manager>
		<authentication-provider user-service-ref="securityService">
			<password-encoder ref="bcryptPasswordEncoder"/>
			<!-- 직접명시 방식
			<user-service>
				<user 
					name="honggd" 
					password="$2a$10$6wLRctSpj6rDSkoDPNdUSeN3mO/lfhAJzD083EZ13sVgT/gPyMeUa" 
					authorities="ROLE_USER"/>
				<user 
					name="admin" 
					password="$2a$10$6wLRctSpj6rDSkoDPNdUSeN3mO/lfhAJzD083EZ13sVgT/gPyMeUa" 
					authorities="ROLE_USER,ROLE_ADMIN"/>
			</user-service> -->
			
		</authentication-provider>
	</authentication-manager>
	<!--  #7. UserDetails구현체 빈등록 -->
	<context:component-scan base-package="com.kh.spring.security" />
</beans:beans>
